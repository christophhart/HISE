# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Loris is Copyright (c) 1999-2010 by Kelly Fitz and Lippold Haken
# <loris@cerlsoundgroup.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src
DIST_COMMON = README $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/loris.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = loris.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libloris_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(CSOUND_LIB)
am__objects_1 = libloris_la-AiffData.lo libloris_la-AiffFile.lo \
	libloris_la-Analyzer.lo libloris_la-AssociateBandwidth.lo \
	libloris_la-BigEndian.lo libloris_la-Breakpoint.lo \
	libloris_la-BreakpointUtils.lo libloris_la-Channelizer.lo \
	libloris_la-Collator.lo libloris_la-Dilator.lo \
	libloris_la-Distiller.lo libloris_la-Envelope.lo \
	libloris_la-F0Estimate.lo libloris_la-LorisExceptions.lo \
	libloris_la-Filter.lo libloris_la-FourierTransform.lo \
	libloris_la-FrequencyReference.lo libloris_la-Fundamental.lo \
	libloris_la-Harmonifier.lo libloris_la-ImportLemur.lo \
	libloris_la-KaiserWindow.lo libloris_la-LinearEnvelope.lo \
	libloris_la-Marker.lo libloris_la-Morpher.lo \
	libloris_la-NoiseGenerator.lo libloris_la-Notifier.lo \
	libloris_la-Oscillator.lo libloris_la-Partial.lo \
	libloris_la-PartialBuilder.lo libloris_la-PartialUtils.lo \
	libloris_la-phasefix.lo libloris_la-ReassignedSpectrum.lo \
	libloris_la-Resampler.lo libloris_la-SdifFile.lo \
	libloris_la-Sieve.lo libloris_la-SpcFile.lo \
	libloris_la-SpectralPeakSelector.lo \
	libloris_la-SpectralSurface.lo libloris_la-Synthesizer.lo \
	libloris_la-fftsg.lo
am__objects_2 = libloris_la-lorisAnalyzer_pi.lo \
	libloris_la-lorisBpEnvelope_pi.lo \
	libloris_la-lorisException_pi.lo libloris_la-lorisNonObj_pi.lo \
	libloris_la-lorisPartialList_pi.lo \
	libloris_la-lorisUtilities_pi.lo
am_libloris_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libloris_la_OBJECTS = $(am_libloris_la_OBJECTS)
libloris_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libloris_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libloris_la_SOURCES)
DIST_SOURCES = $(libloris_la_SOURCES)
HEADERS = $(nodist_include_HEADERS) $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSOUND = @CSOUND@
CSOUND_CONFIG = @CSOUND_CONFIG@
CSOUND_CXXFLAGS = @CSOUND_CXXFLAGS@
CSOUND_PREFIX = @CSOUND_PREFIX@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LINK_FFTW = @LINK_FFTW@
LN_S = @LN_S@
LORIS_MAJOR_VERSION = @LORIS_MAJOR_VERSION@
LORIS_MINOR_VERSION = @LORIS_MINOR_VERSION@
LORIS_SUBMINOR_VERSION = @LORIS_SUBMINOR_VERSION@
LORIS_VERSION_STR = @LORIS_VERSION_STR@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYFLAGS = @PYFLAGS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG = @SWIG@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# source code for Loris classes
CPP_SRC = AiffData.C	\
		AiffData.h \
		AiffFile.C \
		AiffFile.h \
		Analyzer.C \
		Analyzer.h \
		AssociateBandwidth.C \
		AssociateBandwidth.h \
		BigEndian.C \
		BigEndian.h \
		Breakpoint.C \
		Breakpoint.h \
		BreakpointEnvelope.h \
		BreakpointUtils.C \
		BreakpointUtils.h \
		Channelizer.C \
		Channelizer.h \
		Collator.C \
		Collator.h \
		Dilator.C \
		Dilator.h \
		Distiller.C \
		Distiller.h \
		Envelope.C \
		Envelope.h \
		F0Estimate.C \
		F0Estimate.h \
		LorisExceptions.C \
		LorisExceptions.h \
		Filter.C \
		Filter.h \
		FourierTransform.C \
		FourierTransform.h \
		FrequencyReference.C \
		FrequencyReference.h \
		Fundamental.C \
		Fundamental.h \
		Harmonifier.C \
		Harmonifier.h \
		ImportLemur.C \
		ImportLemur.h \
		KaiserWindow.C \
		KaiserWindow.h \
		LinearEnvelope.C \
		LinearEnvelope.h \
		Marker.C	\
		Marker.h	\
		Morpher.C \
		Morpher.h \
		NoiseGenerator.C \
		NoiseGenerator.h \
		Notifier.C \
		Notifier.h \
		Oscillator.C \
		Oscillator.h \
		Partial.C \
		Partial.h \
		PartialBuilder.C	\
		PartialBuilder.h	\
		PartialList.h \
		PartialPtrs.h \
		PartialUtils.C \
		PartialUtils.h \
		phasefix.C	\
		phasefix.h	\
		ReassignedSpectrum.C \
		ReassignedSpectrum.h \
		Resampler.C \
		Resampler.h \
		SdifFile.h \
		SdifFile.C \
		Sieve.h \
		Sieve.C \
		SpcFile.C \
		SpcFile.h \
		SpectralPeaks.h \
		SpectralPeakSelector.C \
		SpectralPeakSelector.h \
		SpectralSurface.C \
		SpectralSurface.h \
		Synthesizer.C \
		Synthesizer.h \
        fftsg.c


# source code for the procedural (C) interface
PI_SRC = loris.h lorisAnalyzer_pi.C lorisBpEnvelope_pi.C \
 lorisException_pi.C lorisException_pi.h lorisNonObj_pi.C \
 lorisPartialList_pi.C lorisUtilities_pi.C 


# convenience library containing Csound opcodes 
@HAVE_CSOUND_TRUE@CSOUND_LIB = $(top_builddir)/csound/liblorisops.la
lib_LTLIBRARIES = libloris.la
libloris_la_SOURCES = $(CPP_SRC) $(PI_SRC)
libloris_la_CPPFLAGS = $(INCLUDE_FFTW) $(default_includes)
libloris_la_LIBADD = $(LINK_FFTW) $(CSOUND_LIB)

# the library version for Loris 1.8 is 13:0:0
libloris_la_LDFLAGS = -version-info 13:0:0 $(EXTRA_LD_FLAGS)

# loris.h is generated automatically from loris.h.in
nodist_include_HEADERS = loris.h
EXTRA_DIST = loris.h.in

# installed Loris header files
pkginclude_HEADERS = \
				AiffFile.h		\
				Analyzer.h		\
				BreakpointEnvelope.h	\
				Breakpoint.h	\
				BreakpointUtils.h	\
				Channelizer.h	\
				Collator.h	\
				Dilator.h	\
				Distiller.h	\
				Envelope.h	\
				Exception.h	\
                F0Estimate.h \
				Filter.h	\
				FourierTransform.h	\
				FrequencyReference.h \
				Fundamental.h \
				Harmonifier.h	\
				ImportLemur.h	\
				KaiserWindow.h	\
				LinearEnvelope.h \
				LorisExceptions.h	\
				Marker.h	\
				Morpher.h	\
				NoiseGenerator.h \
				Notifier.h	\
				Oscillator.h	\
				Partial.h	\
				PartialList.h	\
				PartialPtrs.h	\
				PartialUtils.h	\
				ReassignedSpectrum.h	\
				Resampler.h \
				SdifFile.h	\
				Sieve.h	\
				SpcFile.h	\
				SpectralSurface.h	\
				Synthesizer.h

MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .C .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
loris.h: $(top_builddir)/config.status $(srcdir)/loris.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libloris.la: $(libloris_la_OBJECTS) $(libloris_la_DEPENDENCIES) 
	$(libloris_la_LINK) -rpath $(libdir) $(libloris_la_OBJECTS) $(libloris_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-AiffData.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-AiffFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Analyzer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-AssociateBandwidth.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-BigEndian.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Breakpoint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-BreakpointUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Channelizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Collator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Dilator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Distiller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Envelope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-F0Estimate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Filter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-FourierTransform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-FrequencyReference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Fundamental.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Harmonifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-ImportLemur.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-KaiserWindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-LinearEnvelope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-LorisExceptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Marker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Morpher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-NoiseGenerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Notifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Oscillator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Partial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-PartialBuilder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-PartialUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-ReassignedSpectrum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Resampler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-SdifFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Sieve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-SpcFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-SpectralPeakSelector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-SpectralSurface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-Synthesizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-fftsg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisAnalyzer_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisBpEnvelope_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisException_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisNonObj_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisPartialList_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-lorisUtilities_pi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libloris_la-phasefix.Plo@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libloris_la-AiffData.lo: AiffData.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-AiffData.lo -MD -MP -MF $(DEPDIR)/libloris_la-AiffData.Tpo -c -o libloris_la-AiffData.lo `test -f 'AiffData.C' || echo '$(srcdir)/'`AiffData.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-AiffData.Tpo $(DEPDIR)/libloris_la-AiffData.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AiffData.C' object='libloris_la-AiffData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-AiffData.lo `test -f 'AiffData.C' || echo '$(srcdir)/'`AiffData.C

libloris_la-AiffFile.lo: AiffFile.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-AiffFile.lo -MD -MP -MF $(DEPDIR)/libloris_la-AiffFile.Tpo -c -o libloris_la-AiffFile.lo `test -f 'AiffFile.C' || echo '$(srcdir)/'`AiffFile.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-AiffFile.Tpo $(DEPDIR)/libloris_la-AiffFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AiffFile.C' object='libloris_la-AiffFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-AiffFile.lo `test -f 'AiffFile.C' || echo '$(srcdir)/'`AiffFile.C

libloris_la-Analyzer.lo: Analyzer.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Analyzer.lo -MD -MP -MF $(DEPDIR)/libloris_la-Analyzer.Tpo -c -o libloris_la-Analyzer.lo `test -f 'Analyzer.C' || echo '$(srcdir)/'`Analyzer.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Analyzer.Tpo $(DEPDIR)/libloris_la-Analyzer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Analyzer.C' object='libloris_la-Analyzer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Analyzer.lo `test -f 'Analyzer.C' || echo '$(srcdir)/'`Analyzer.C

libloris_la-AssociateBandwidth.lo: AssociateBandwidth.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-AssociateBandwidth.lo -MD -MP -MF $(DEPDIR)/libloris_la-AssociateBandwidth.Tpo -c -o libloris_la-AssociateBandwidth.lo `test -f 'AssociateBandwidth.C' || echo '$(srcdir)/'`AssociateBandwidth.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-AssociateBandwidth.Tpo $(DEPDIR)/libloris_la-AssociateBandwidth.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AssociateBandwidth.C' object='libloris_la-AssociateBandwidth.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-AssociateBandwidth.lo `test -f 'AssociateBandwidth.C' || echo '$(srcdir)/'`AssociateBandwidth.C

libloris_la-BigEndian.lo: BigEndian.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-BigEndian.lo -MD -MP -MF $(DEPDIR)/libloris_la-BigEndian.Tpo -c -o libloris_la-BigEndian.lo `test -f 'BigEndian.C' || echo '$(srcdir)/'`BigEndian.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-BigEndian.Tpo $(DEPDIR)/libloris_la-BigEndian.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BigEndian.C' object='libloris_la-BigEndian.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-BigEndian.lo `test -f 'BigEndian.C' || echo '$(srcdir)/'`BigEndian.C

libloris_la-Breakpoint.lo: Breakpoint.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Breakpoint.lo -MD -MP -MF $(DEPDIR)/libloris_la-Breakpoint.Tpo -c -o libloris_la-Breakpoint.lo `test -f 'Breakpoint.C' || echo '$(srcdir)/'`Breakpoint.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Breakpoint.Tpo $(DEPDIR)/libloris_la-Breakpoint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Breakpoint.C' object='libloris_la-Breakpoint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Breakpoint.lo `test -f 'Breakpoint.C' || echo '$(srcdir)/'`Breakpoint.C

libloris_la-BreakpointUtils.lo: BreakpointUtils.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-BreakpointUtils.lo -MD -MP -MF $(DEPDIR)/libloris_la-BreakpointUtils.Tpo -c -o libloris_la-BreakpointUtils.lo `test -f 'BreakpointUtils.C' || echo '$(srcdir)/'`BreakpointUtils.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-BreakpointUtils.Tpo $(DEPDIR)/libloris_la-BreakpointUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BreakpointUtils.C' object='libloris_la-BreakpointUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-BreakpointUtils.lo `test -f 'BreakpointUtils.C' || echo '$(srcdir)/'`BreakpointUtils.C

libloris_la-Channelizer.lo: Channelizer.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Channelizer.lo -MD -MP -MF $(DEPDIR)/libloris_la-Channelizer.Tpo -c -o libloris_la-Channelizer.lo `test -f 'Channelizer.C' || echo '$(srcdir)/'`Channelizer.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Channelizer.Tpo $(DEPDIR)/libloris_la-Channelizer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Channelizer.C' object='libloris_la-Channelizer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Channelizer.lo `test -f 'Channelizer.C' || echo '$(srcdir)/'`Channelizer.C

libloris_la-Collator.lo: Collator.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Collator.lo -MD -MP -MF $(DEPDIR)/libloris_la-Collator.Tpo -c -o libloris_la-Collator.lo `test -f 'Collator.C' || echo '$(srcdir)/'`Collator.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Collator.Tpo $(DEPDIR)/libloris_la-Collator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Collator.C' object='libloris_la-Collator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Collator.lo `test -f 'Collator.C' || echo '$(srcdir)/'`Collator.C

libloris_la-Dilator.lo: Dilator.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Dilator.lo -MD -MP -MF $(DEPDIR)/libloris_la-Dilator.Tpo -c -o libloris_la-Dilator.lo `test -f 'Dilator.C' || echo '$(srcdir)/'`Dilator.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Dilator.Tpo $(DEPDIR)/libloris_la-Dilator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Dilator.C' object='libloris_la-Dilator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Dilator.lo `test -f 'Dilator.C' || echo '$(srcdir)/'`Dilator.C

libloris_la-Distiller.lo: Distiller.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Distiller.lo -MD -MP -MF $(DEPDIR)/libloris_la-Distiller.Tpo -c -o libloris_la-Distiller.lo `test -f 'Distiller.C' || echo '$(srcdir)/'`Distiller.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Distiller.Tpo $(DEPDIR)/libloris_la-Distiller.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Distiller.C' object='libloris_la-Distiller.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Distiller.lo `test -f 'Distiller.C' || echo '$(srcdir)/'`Distiller.C

libloris_la-Envelope.lo: Envelope.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Envelope.lo -MD -MP -MF $(DEPDIR)/libloris_la-Envelope.Tpo -c -o libloris_la-Envelope.lo `test -f 'Envelope.C' || echo '$(srcdir)/'`Envelope.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Envelope.Tpo $(DEPDIR)/libloris_la-Envelope.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Envelope.C' object='libloris_la-Envelope.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Envelope.lo `test -f 'Envelope.C' || echo '$(srcdir)/'`Envelope.C

libloris_la-F0Estimate.lo: F0Estimate.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-F0Estimate.lo -MD -MP -MF $(DEPDIR)/libloris_la-F0Estimate.Tpo -c -o libloris_la-F0Estimate.lo `test -f 'F0Estimate.C' || echo '$(srcdir)/'`F0Estimate.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-F0Estimate.Tpo $(DEPDIR)/libloris_la-F0Estimate.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='F0Estimate.C' object='libloris_la-F0Estimate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-F0Estimate.lo `test -f 'F0Estimate.C' || echo '$(srcdir)/'`F0Estimate.C

libloris_la-LorisExceptions.lo: LorisExceptions.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-LorisExceptions.lo -MD -MP -MF $(DEPDIR)/libloris_la-LorisExceptions.Tpo -c -o libloris_la-LorisExceptions.lo `test -f 'LorisExceptions.C' || echo '$(srcdir)/'`LorisExceptions.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-LorisExceptions.Tpo $(DEPDIR)/libloris_la-LorisExceptions.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LorisExceptions.C' object='libloris_la-LorisExceptions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-LorisExceptions.lo `test -f 'LorisExceptions.C' || echo '$(srcdir)/'`LorisExceptions.C

libloris_la-Filter.lo: Filter.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Filter.lo -MD -MP -MF $(DEPDIR)/libloris_la-Filter.Tpo -c -o libloris_la-Filter.lo `test -f 'Filter.C' || echo '$(srcdir)/'`Filter.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Filter.Tpo $(DEPDIR)/libloris_la-Filter.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Filter.C' object='libloris_la-Filter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Filter.lo `test -f 'Filter.C' || echo '$(srcdir)/'`Filter.C

libloris_la-FourierTransform.lo: FourierTransform.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-FourierTransform.lo -MD -MP -MF $(DEPDIR)/libloris_la-FourierTransform.Tpo -c -o libloris_la-FourierTransform.lo `test -f 'FourierTransform.C' || echo '$(srcdir)/'`FourierTransform.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-FourierTransform.Tpo $(DEPDIR)/libloris_la-FourierTransform.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FourierTransform.C' object='libloris_la-FourierTransform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-FourierTransform.lo `test -f 'FourierTransform.C' || echo '$(srcdir)/'`FourierTransform.C

libloris_la-FrequencyReference.lo: FrequencyReference.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-FrequencyReference.lo -MD -MP -MF $(DEPDIR)/libloris_la-FrequencyReference.Tpo -c -o libloris_la-FrequencyReference.lo `test -f 'FrequencyReference.C' || echo '$(srcdir)/'`FrequencyReference.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-FrequencyReference.Tpo $(DEPDIR)/libloris_la-FrequencyReference.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FrequencyReference.C' object='libloris_la-FrequencyReference.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-FrequencyReference.lo `test -f 'FrequencyReference.C' || echo '$(srcdir)/'`FrequencyReference.C

libloris_la-Fundamental.lo: Fundamental.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Fundamental.lo -MD -MP -MF $(DEPDIR)/libloris_la-Fundamental.Tpo -c -o libloris_la-Fundamental.lo `test -f 'Fundamental.C' || echo '$(srcdir)/'`Fundamental.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Fundamental.Tpo $(DEPDIR)/libloris_la-Fundamental.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Fundamental.C' object='libloris_la-Fundamental.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Fundamental.lo `test -f 'Fundamental.C' || echo '$(srcdir)/'`Fundamental.C

libloris_la-Harmonifier.lo: Harmonifier.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Harmonifier.lo -MD -MP -MF $(DEPDIR)/libloris_la-Harmonifier.Tpo -c -o libloris_la-Harmonifier.lo `test -f 'Harmonifier.C' || echo '$(srcdir)/'`Harmonifier.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Harmonifier.Tpo $(DEPDIR)/libloris_la-Harmonifier.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Harmonifier.C' object='libloris_la-Harmonifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Harmonifier.lo `test -f 'Harmonifier.C' || echo '$(srcdir)/'`Harmonifier.C

libloris_la-ImportLemur.lo: ImportLemur.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-ImportLemur.lo -MD -MP -MF $(DEPDIR)/libloris_la-ImportLemur.Tpo -c -o libloris_la-ImportLemur.lo `test -f 'ImportLemur.C' || echo '$(srcdir)/'`ImportLemur.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-ImportLemur.Tpo $(DEPDIR)/libloris_la-ImportLemur.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImportLemur.C' object='libloris_la-ImportLemur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-ImportLemur.lo `test -f 'ImportLemur.C' || echo '$(srcdir)/'`ImportLemur.C

libloris_la-KaiserWindow.lo: KaiserWindow.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-KaiserWindow.lo -MD -MP -MF $(DEPDIR)/libloris_la-KaiserWindow.Tpo -c -o libloris_la-KaiserWindow.lo `test -f 'KaiserWindow.C' || echo '$(srcdir)/'`KaiserWindow.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-KaiserWindow.Tpo $(DEPDIR)/libloris_la-KaiserWindow.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KaiserWindow.C' object='libloris_la-KaiserWindow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-KaiserWindow.lo `test -f 'KaiserWindow.C' || echo '$(srcdir)/'`KaiserWindow.C

libloris_la-LinearEnvelope.lo: LinearEnvelope.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-LinearEnvelope.lo -MD -MP -MF $(DEPDIR)/libloris_la-LinearEnvelope.Tpo -c -o libloris_la-LinearEnvelope.lo `test -f 'LinearEnvelope.C' || echo '$(srcdir)/'`LinearEnvelope.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-LinearEnvelope.Tpo $(DEPDIR)/libloris_la-LinearEnvelope.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LinearEnvelope.C' object='libloris_la-LinearEnvelope.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-LinearEnvelope.lo `test -f 'LinearEnvelope.C' || echo '$(srcdir)/'`LinearEnvelope.C

libloris_la-Marker.lo: Marker.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Marker.lo -MD -MP -MF $(DEPDIR)/libloris_la-Marker.Tpo -c -o libloris_la-Marker.lo `test -f 'Marker.C' || echo '$(srcdir)/'`Marker.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Marker.Tpo $(DEPDIR)/libloris_la-Marker.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Marker.C' object='libloris_la-Marker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Marker.lo `test -f 'Marker.C' || echo '$(srcdir)/'`Marker.C

libloris_la-Morpher.lo: Morpher.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Morpher.lo -MD -MP -MF $(DEPDIR)/libloris_la-Morpher.Tpo -c -o libloris_la-Morpher.lo `test -f 'Morpher.C' || echo '$(srcdir)/'`Morpher.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Morpher.Tpo $(DEPDIR)/libloris_la-Morpher.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Morpher.C' object='libloris_la-Morpher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Morpher.lo `test -f 'Morpher.C' || echo '$(srcdir)/'`Morpher.C

libloris_la-NoiseGenerator.lo: NoiseGenerator.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-NoiseGenerator.lo -MD -MP -MF $(DEPDIR)/libloris_la-NoiseGenerator.Tpo -c -o libloris_la-NoiseGenerator.lo `test -f 'NoiseGenerator.C' || echo '$(srcdir)/'`NoiseGenerator.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-NoiseGenerator.Tpo $(DEPDIR)/libloris_la-NoiseGenerator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NoiseGenerator.C' object='libloris_la-NoiseGenerator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-NoiseGenerator.lo `test -f 'NoiseGenerator.C' || echo '$(srcdir)/'`NoiseGenerator.C

libloris_la-Notifier.lo: Notifier.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Notifier.lo -MD -MP -MF $(DEPDIR)/libloris_la-Notifier.Tpo -c -o libloris_la-Notifier.lo `test -f 'Notifier.C' || echo '$(srcdir)/'`Notifier.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Notifier.Tpo $(DEPDIR)/libloris_la-Notifier.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Notifier.C' object='libloris_la-Notifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Notifier.lo `test -f 'Notifier.C' || echo '$(srcdir)/'`Notifier.C

libloris_la-Oscillator.lo: Oscillator.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Oscillator.lo -MD -MP -MF $(DEPDIR)/libloris_la-Oscillator.Tpo -c -o libloris_la-Oscillator.lo `test -f 'Oscillator.C' || echo '$(srcdir)/'`Oscillator.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Oscillator.Tpo $(DEPDIR)/libloris_la-Oscillator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Oscillator.C' object='libloris_la-Oscillator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Oscillator.lo `test -f 'Oscillator.C' || echo '$(srcdir)/'`Oscillator.C

libloris_la-Partial.lo: Partial.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Partial.lo -MD -MP -MF $(DEPDIR)/libloris_la-Partial.Tpo -c -o libloris_la-Partial.lo `test -f 'Partial.C' || echo '$(srcdir)/'`Partial.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Partial.Tpo $(DEPDIR)/libloris_la-Partial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Partial.C' object='libloris_la-Partial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Partial.lo `test -f 'Partial.C' || echo '$(srcdir)/'`Partial.C

libloris_la-PartialBuilder.lo: PartialBuilder.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-PartialBuilder.lo -MD -MP -MF $(DEPDIR)/libloris_la-PartialBuilder.Tpo -c -o libloris_la-PartialBuilder.lo `test -f 'PartialBuilder.C' || echo '$(srcdir)/'`PartialBuilder.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-PartialBuilder.Tpo $(DEPDIR)/libloris_la-PartialBuilder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PartialBuilder.C' object='libloris_la-PartialBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-PartialBuilder.lo `test -f 'PartialBuilder.C' || echo '$(srcdir)/'`PartialBuilder.C

libloris_la-PartialUtils.lo: PartialUtils.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-PartialUtils.lo -MD -MP -MF $(DEPDIR)/libloris_la-PartialUtils.Tpo -c -o libloris_la-PartialUtils.lo `test -f 'PartialUtils.C' || echo '$(srcdir)/'`PartialUtils.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-PartialUtils.Tpo $(DEPDIR)/libloris_la-PartialUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PartialUtils.C' object='libloris_la-PartialUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-PartialUtils.lo `test -f 'PartialUtils.C' || echo '$(srcdir)/'`PartialUtils.C

libloris_la-phasefix.lo: phasefix.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-phasefix.lo -MD -MP -MF $(DEPDIR)/libloris_la-phasefix.Tpo -c -o libloris_la-phasefix.lo `test -f 'phasefix.C' || echo '$(srcdir)/'`phasefix.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-phasefix.Tpo $(DEPDIR)/libloris_la-phasefix.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='phasefix.C' object='libloris_la-phasefix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-phasefix.lo `test -f 'phasefix.C' || echo '$(srcdir)/'`phasefix.C

libloris_la-ReassignedSpectrum.lo: ReassignedSpectrum.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-ReassignedSpectrum.lo -MD -MP -MF $(DEPDIR)/libloris_la-ReassignedSpectrum.Tpo -c -o libloris_la-ReassignedSpectrum.lo `test -f 'ReassignedSpectrum.C' || echo '$(srcdir)/'`ReassignedSpectrum.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-ReassignedSpectrum.Tpo $(DEPDIR)/libloris_la-ReassignedSpectrum.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ReassignedSpectrum.C' object='libloris_la-ReassignedSpectrum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-ReassignedSpectrum.lo `test -f 'ReassignedSpectrum.C' || echo '$(srcdir)/'`ReassignedSpectrum.C

libloris_la-Resampler.lo: Resampler.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Resampler.lo -MD -MP -MF $(DEPDIR)/libloris_la-Resampler.Tpo -c -o libloris_la-Resampler.lo `test -f 'Resampler.C' || echo '$(srcdir)/'`Resampler.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Resampler.Tpo $(DEPDIR)/libloris_la-Resampler.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Resampler.C' object='libloris_la-Resampler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Resampler.lo `test -f 'Resampler.C' || echo '$(srcdir)/'`Resampler.C

libloris_la-SdifFile.lo: SdifFile.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-SdifFile.lo -MD -MP -MF $(DEPDIR)/libloris_la-SdifFile.Tpo -c -o libloris_la-SdifFile.lo `test -f 'SdifFile.C' || echo '$(srcdir)/'`SdifFile.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-SdifFile.Tpo $(DEPDIR)/libloris_la-SdifFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SdifFile.C' object='libloris_la-SdifFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-SdifFile.lo `test -f 'SdifFile.C' || echo '$(srcdir)/'`SdifFile.C

libloris_la-Sieve.lo: Sieve.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Sieve.lo -MD -MP -MF $(DEPDIR)/libloris_la-Sieve.Tpo -c -o libloris_la-Sieve.lo `test -f 'Sieve.C' || echo '$(srcdir)/'`Sieve.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Sieve.Tpo $(DEPDIR)/libloris_la-Sieve.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Sieve.C' object='libloris_la-Sieve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Sieve.lo `test -f 'Sieve.C' || echo '$(srcdir)/'`Sieve.C

libloris_la-SpcFile.lo: SpcFile.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-SpcFile.lo -MD -MP -MF $(DEPDIR)/libloris_la-SpcFile.Tpo -c -o libloris_la-SpcFile.lo `test -f 'SpcFile.C' || echo '$(srcdir)/'`SpcFile.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-SpcFile.Tpo $(DEPDIR)/libloris_la-SpcFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpcFile.C' object='libloris_la-SpcFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-SpcFile.lo `test -f 'SpcFile.C' || echo '$(srcdir)/'`SpcFile.C

libloris_la-SpectralPeakSelector.lo: SpectralPeakSelector.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-SpectralPeakSelector.lo -MD -MP -MF $(DEPDIR)/libloris_la-SpectralPeakSelector.Tpo -c -o libloris_la-SpectralPeakSelector.lo `test -f 'SpectralPeakSelector.C' || echo '$(srcdir)/'`SpectralPeakSelector.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-SpectralPeakSelector.Tpo $(DEPDIR)/libloris_la-SpectralPeakSelector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpectralPeakSelector.C' object='libloris_la-SpectralPeakSelector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-SpectralPeakSelector.lo `test -f 'SpectralPeakSelector.C' || echo '$(srcdir)/'`SpectralPeakSelector.C

libloris_la-SpectralSurface.lo: SpectralSurface.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-SpectralSurface.lo -MD -MP -MF $(DEPDIR)/libloris_la-SpectralSurface.Tpo -c -o libloris_la-SpectralSurface.lo `test -f 'SpectralSurface.C' || echo '$(srcdir)/'`SpectralSurface.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-SpectralSurface.Tpo $(DEPDIR)/libloris_la-SpectralSurface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpectralSurface.C' object='libloris_la-SpectralSurface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-SpectralSurface.lo `test -f 'SpectralSurface.C' || echo '$(srcdir)/'`SpectralSurface.C

libloris_la-Synthesizer.lo: Synthesizer.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-Synthesizer.lo -MD -MP -MF $(DEPDIR)/libloris_la-Synthesizer.Tpo -c -o libloris_la-Synthesizer.lo `test -f 'Synthesizer.C' || echo '$(srcdir)/'`Synthesizer.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-Synthesizer.Tpo $(DEPDIR)/libloris_la-Synthesizer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Synthesizer.C' object='libloris_la-Synthesizer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-Synthesizer.lo `test -f 'Synthesizer.C' || echo '$(srcdir)/'`Synthesizer.C

libloris_la-lorisAnalyzer_pi.lo: lorisAnalyzer_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisAnalyzer_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisAnalyzer_pi.Tpo -c -o libloris_la-lorisAnalyzer_pi.lo `test -f 'lorisAnalyzer_pi.C' || echo '$(srcdir)/'`lorisAnalyzer_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisAnalyzer_pi.Tpo $(DEPDIR)/libloris_la-lorisAnalyzer_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisAnalyzer_pi.C' object='libloris_la-lorisAnalyzer_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisAnalyzer_pi.lo `test -f 'lorisAnalyzer_pi.C' || echo '$(srcdir)/'`lorisAnalyzer_pi.C

libloris_la-lorisBpEnvelope_pi.lo: lorisBpEnvelope_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisBpEnvelope_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisBpEnvelope_pi.Tpo -c -o libloris_la-lorisBpEnvelope_pi.lo `test -f 'lorisBpEnvelope_pi.C' || echo '$(srcdir)/'`lorisBpEnvelope_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisBpEnvelope_pi.Tpo $(DEPDIR)/libloris_la-lorisBpEnvelope_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisBpEnvelope_pi.C' object='libloris_la-lorisBpEnvelope_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisBpEnvelope_pi.lo `test -f 'lorisBpEnvelope_pi.C' || echo '$(srcdir)/'`lorisBpEnvelope_pi.C

libloris_la-lorisException_pi.lo: lorisException_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisException_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisException_pi.Tpo -c -o libloris_la-lorisException_pi.lo `test -f 'lorisException_pi.C' || echo '$(srcdir)/'`lorisException_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisException_pi.Tpo $(DEPDIR)/libloris_la-lorisException_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisException_pi.C' object='libloris_la-lorisException_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisException_pi.lo `test -f 'lorisException_pi.C' || echo '$(srcdir)/'`lorisException_pi.C

libloris_la-lorisNonObj_pi.lo: lorisNonObj_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisNonObj_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisNonObj_pi.Tpo -c -o libloris_la-lorisNonObj_pi.lo `test -f 'lorisNonObj_pi.C' || echo '$(srcdir)/'`lorisNonObj_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisNonObj_pi.Tpo $(DEPDIR)/libloris_la-lorisNonObj_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisNonObj_pi.C' object='libloris_la-lorisNonObj_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisNonObj_pi.lo `test -f 'lorisNonObj_pi.C' || echo '$(srcdir)/'`lorisNonObj_pi.C

libloris_la-lorisPartialList_pi.lo: lorisPartialList_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisPartialList_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisPartialList_pi.Tpo -c -o libloris_la-lorisPartialList_pi.lo `test -f 'lorisPartialList_pi.C' || echo '$(srcdir)/'`lorisPartialList_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisPartialList_pi.Tpo $(DEPDIR)/libloris_la-lorisPartialList_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisPartialList_pi.C' object='libloris_la-lorisPartialList_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisPartialList_pi.lo `test -f 'lorisPartialList_pi.C' || echo '$(srcdir)/'`lorisPartialList_pi.C

libloris_la-lorisUtilities_pi.lo: lorisUtilities_pi.C
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libloris_la-lorisUtilities_pi.lo -MD -MP -MF $(DEPDIR)/libloris_la-lorisUtilities_pi.Tpo -c -o libloris_la-lorisUtilities_pi.lo `test -f 'lorisUtilities_pi.C' || echo '$(srcdir)/'`lorisUtilities_pi.C
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-lorisUtilities_pi.Tpo $(DEPDIR)/libloris_la-lorisUtilities_pi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lorisUtilities_pi.C' object='libloris_la-lorisUtilities_pi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libloris_la-lorisUtilities_pi.lo `test -f 'lorisUtilities_pi.C' || echo '$(srcdir)/'`lorisUtilities_pi.C

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libloris_la-fftsg.lo: fftsg.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libloris_la-fftsg.lo -MD -MP -MF $(DEPDIR)/libloris_la-fftsg.Tpo -c -o libloris_la-fftsg.lo `test -f 'fftsg.c' || echo '$(srcdir)/'`fftsg.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libloris_la-fftsg.Tpo $(DEPDIR)/libloris_la-fftsg.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fftsg.c' object='libloris_la-fftsg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libloris_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libloris_la-fftsg.lo `test -f 'fftsg.c' || echo '$(srcdir)/'`fftsg.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nodist_includeHEADERS \
	install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-nodist_includeHEADERS \
	uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-nodist_includeHEADERS \
	uninstall-pkgincludeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
