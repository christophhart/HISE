#pragma once

#include "JuceHeader.h"

using namespace scriptnode;
using namespace snex;
using namespace snex::Types;

namespace TableTest1_impl
{
// =========================| Node & Parameter type declarations |=========================

struct table_t_data
{
	span<float, 512> data =
	{
		1.f, 0.87644f, 0.827881f, 0.792328f, 0.760517f, 0.735368f,
		0.710578f, 0.69075f, 0.670922f, 0.652778f, 0.636633f, 0.620489f,
		0.60535f, 0.591907f, 0.578464f, 0.565021f, 0.553256f, 0.541878f,
		0.530501f, 0.519124f, 0.509016f, 0.499269f, 0.489522f, 0.479776f,
		0.470385f, 0.461959f, 0.453532f, 0.445106f, 0.436679f, 0.428565f,
		0.421229f, 0.413893f, 0.406558f, 0.399222f, 0.391886f, 0.385309f,
		0.378889f, 0.372469f, 0.366049f, 0.35963f, 0.35321f, 0.347489f,
		0.34185f, 0.33621f, 0.330571f, 0.324931f, 0.319292f, 0.313981f,
		0.309014f, 0.304048f, 0.299081f, 0.294115f, 0.289148f, 0.284181f,
		0.27957f, 0.275189f, 0.270808f, 0.266428f, 0.262047f, 0.257666f,
		0.253286f, 0.249034f, 0.245168f, 0.241302f, 0.237436f, 0.23357f,
		0.229704f, 0.225839f, 0.221973f, 0.218298f, 0.214888f, 0.211479f,
		0.208069f, 0.204659f, 0.201249f, 0.197839f, 0.19443f, 0.191066f,
		0.188063f, 0.18506f, 0.182057f, 0.179054f, 0.176051f, 0.173048f,
		0.170045f, 0.167042f, 0.164161f, 0.161523f, 0.158885f, 0.156247f,
		0.153609f, 0.150971f, 0.148333f, 0.145695f, 0.143057f, 0.140445f,
		0.138136f, 0.135828f, 0.133519f, 0.131211f, 0.128902f, 0.126593f,
		0.124285f, 0.121976f, 0.119668f, 0.117463f, 0.115454f, 0.113444f,
		0.111434f, 0.109424f, 0.107415f, 0.105405f, 0.103395f, 0.101385f,
		0.0993755f, 0.0974051f, 0.0956676f, 0.0939301f, 0.0921925f, 0.0904549f,
		0.0887174f, 0.0869799f, 0.0852423f, 0.0835048f, 0.0817673f, 0.0800297f,
		0.0784082f, 0.0769197f, 0.0754312f, 0.0739427f, 0.0724543f, 0.0709658f,
		0.0694773f, 0.0679888f, 0.0665003f, 0.0650118f, 0.0635234f, 0.0621063f,
		0.0608466f, 0.0595868f, 0.058327f, 0.0570673f, 0.0558075f, 0.0545477f,
		0.053288f, 0.0520282f, 0.0507684f, 0.0495087f, 0.0482489f, 0.0471334f,
		0.0460845f, 0.0450355f, 0.0439865f, 0.0429375f, 0.0418886f, 0.0408396f,
		0.0397906f, 0.0387416f, 0.0376927f, 0.0366437f, 0.0355947f, 0.0346591f,
		0.033805f, 0.0329509f, 0.0320968f, 0.0312427f, 0.0303886f, 0.0295345f,
		0.0286804f, 0.0278263f, 0.0269722f, 0.0261181f, 0.025264f, 0.0244108f,
		0.0237374f, 0.023064f, 0.0223905f, 0.0217172f, 0.0210438f, 0.0203704f,
		0.019697f, 0.0190236f, 0.0183502f, 0.0176768f, 0.0170034f, 0.0163299f,
		0.0156566f, 0.0151433f, 0.0146379f, 0.0141326f, 0.0136272f, 0.0131218f,
		0.0126164f, 0.0121111f, 0.0116057f, 0.0111003f, 0.0105949f, 0.0100895f,
		0.00958413f, 0.00907874f, 0.00864023f, 0.00829148f, 0.00794274f, 0.00759399f,
		0.00724524f, 0.0068965f, 0.00654775f, 0.006199f, 0.00585026f, 0.00550151f,
		0.00515276f, 0.00480402f, 0.00445527f, 0.00410652f, 0.00382006f, 0.0036177f,
		0.00341529f, 0.00321293f, 0.00301051f, 0.00280815f, 0.00260574f, 0.00240338f,
		0.00220096f, 0.0019986f, 0.00179619f, 0.00159383f, 0.00139141f, 0.00118905f,
		0.000986636f, 0.000914514f, 0.000849187f, 0.000783861f, 0.000718534f, 0.000653207f,
		0.000587881f, 0.000522554f, 0.000457227f, 0.000391901f, 0.000326633f, 0.000261307f,
		0.00019598f, 0.000130653f, 6.53267e-05f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f, 1.f, 1.f, 1.f, 1.f,
		1.f, 1.f
	};
};

using table_t = wrap::data<core::table, 
                           data::embedded::table<table_t_data>>;

using TableTest1_t_ = container::chain<parameter::empty, 
                                       wrap::fix<2, core::ramp>, 
                                       table_t, 
                                       core::mono2stereo>;

// =============================| Root node initialiser class |=============================

struct instance: public TableTest1_t_
{
	
	struct metadata
	{
		SNEX_METADATA_ID(instance);
		SNEX_METADATA_NUM_CHANNELS(2);
		SNEX_METADATA_ENCODED_PARAMETERS(2)
		{
			0x0000, 0x0000
		};
	};
	
	instance()
	{
		// Node References ----------------------------------------------------------------
		
		auto& ramp = this->get<0>();        // core::ramp
		auto& table = this->get<1>();       // TableTest1_impl::table_t
		auto& mono2stereo = this->get<2>(); // core::mono2stereo
		
		// Default Values -----------------------------------------------------------------
		
		ramp.setParameter<0>(196.); // core::ramp::PeriodTime
		ramp.setParameter<1>(0.);   // core::ramp::LoopStart
		
	}
	
	void setExternalData(const ExternalData& b, int index)
	{
		// External Data Connections ------------------------------------------------------
		
		this->get<1>().setExternalData(b, index); // TableTest1_impl::table_t
	}
};
}

// ==================================| Public Definition |==================================

namespace project
{
using TableTest1 = wrap::node<TableTest1_impl::instance>;
}


